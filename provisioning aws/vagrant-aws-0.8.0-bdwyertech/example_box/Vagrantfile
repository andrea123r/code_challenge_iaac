# -*- mode: ruby -*-
# vi: set ft=ruby :
# Require the AWS provider plugin
require 'vagrant-aws'

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "aws"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "aws" do |aws, override|
    # Read AWS authentication information from environment variables
    aws.access_key_id = 'XXXXXXXXXXXXXXXXXXX'
    aws.secret_access_key = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'
    # Specify SSH keypair to use
    aws.keypair_name = 'ad'
    aws.instance_type = 'c4.8xlarge"
    # Specify region, AMI ID, and security group(s)
    aws.region = 'us-east-1'
    aws.ami = 'ami-0affd4508a5d2481b'
    aws.subnet_id = 'subnet-04e62635'
    aws.associate_public_ip = 'true'
    aws.elastic_ip = '54.145.245.118'
    # Specify username and private key path
    override.ssh.username = 'ec2-user'
    override.ssh.private_key_path = "Path to my ssh pem file"
    aws.ssh_host_attribute = :private_ip_address
    # Tag the machine with a name.
    aws.tags = {
          'Name' => 'my-server'
    }

    # Customize the amount of memory on the VM:
    # vb.memory = "1024"
  end
  config.vm.provider "aws" do |aws|
    # Read AWS authentication information from environment variables
    aws.access_key_id = 'XXXXXXXXXXXXXXXXXXX'
    aws.secret_access_key = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'
    # Specify SSH keypair to use
    aws.keypair_name = 'ad'
    aws.instance_type = 'c4.8xlarge"
    # Specify region, AMI ID, and security group(s)
    aws.region = 'us-east-1'
    aws.ami = 'ami-0affd4508a5d2481b'
    aws.subnet_id = 'subnet-04e62635'
    aws.associate_public_ip = 'true'
    aws.elastic_ip = '3.88.77.89'
    # Specify username and private key path
    override.ssh.username = 'ec2-user'
    override.ssh.private_key_path = "Path to my ssh pem file"
    aws.ssh_host_attribute = :private_ip_address
  
    # Customize the amount of memory on the VM:
    # vb.memory = "1024"
  end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "ansible" do |ansible|
    ansible.playbook = "playbook.yml"
  end

end
